# auto-generated by grc.converter

id: lfast_MTFIRLowPassFilterXX
label: Multithreaded Low Pass FIR Filter
category: '[LFAST Accelerated Blocks]'

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [CCF, FF]
    option_labels: [Complex->Complex (Real Taps), Float->Float (Real Taps)]
    option_attributes:
        input: [complex, float]
        output: [complex, float]
        taps: [real_vector, real_vector]
    hide: part
-   id: nthreads
    label: Threads
    dtype: int
    default: '4'
-   id: gain
    label: Gain
    dtype: real
    default: '1'
-   id: samp_rate
    label: Sample Rate
    dtype: real
    default: samp_rate
-   id: cutoff_freq
    label: Cutoff Freq
    dtype: real
-   id: width
    label: Transition Width
    dtype: real
-   id: win
    label: Window
    dtype: enum
    default: window.WIN_HAMMING
    options: [window.WIN_HAMMING, window.WIN_HANN, window.WIN_BLACKMAN, window.WIN_RECTANGULAR,
        window.WIN_KAISER]
    option_labels: [Hamming, Hann, Blackman, Rectangular, Kaiser]
-   id: beta
    label: Beta
    dtype: real
    default: '6.76'

inputs:
-   domain: stream
    dtype: ${ type.input }

outputs:
-   domain: stream
    dtype: ${ type.output }

templates:
    imports: |-
        import lfast
        from gnuradio.filter import firdes
        from gnuradio.fft import window
    make: lfast.MTFIRFilter${type}(1, firdes.low_pass(${gain}, ${samp_rate}, ${cutoff_freq},
        ${width}, ${win}, ${beta}), ${nthreads})
    callbacks:
    - set_taps(firdes.low_pass(${gain}, ${samp_rate}, ${cutoff_freq}, ${width}, ${win},
        ${beta}))

documentation: |-
    This filter is a convenience wrapper for an fir filter and a firdes taps generating function.

    Sample rate, cutoff frequency, and transition width are in Hertz.

    The beta parameter only applies to the Kaiser window.

file_format: 1
